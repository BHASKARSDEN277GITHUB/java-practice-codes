import java.io.* ;
import java.util.*;

public class anagramsSolutionHackerrank {
	
	public static void main(String[] args) throws IOException
	{
		int t ; //testcases ..
		String input ; //input string ..
		BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
		
		t=Integer.parseInt(reader.readLine());
		
		while(t-- > 0)
		{
			input=reader.readLine();
			int result=countVariations(input);
			System.out.println(result);
		}
	}
	
	public static int countVariations(String input)
	{
		int length=input.length();
		if(length%2!=0)
		return -1;
		else
		{
			int l1=length/2;
			int l2=l1;
			StringBuilder s1=new StringBuilder(input.substring(0,l1));
			StringBuilder s2=new StringBuilder(input.substring(l1,length));
	
			sort(s1,0,l1-1);	
			sort(s2,0,l2-1);
		
			int variations=0;
			
			for(int i=0;i<l1;i++)
			{
				if(s1.charAt(i)!=s2.charAt(i))
				variations++;
			}
			return variations;
		}
	}
	
	public static void sort(StringBuilder str , int start ,int end) //quickSort..
	{
		char pivot=str.charAt(end);
		char temp ;
		int p=start-1;
		int q=start;
		if(start<end)
		{
			while(q<end)
			{
				if(str.charAt(q)<=pivot)
				{
					p++;
					temp=str.charAt(q);
					str.setCharAt(q,str.charAt(p));
					str.setCharAt(p,temp);
					q++;
				}
				else
					q++;
			}
		
		
		System.out.println(str.charAt(p+1));	
		temp=str.charAt(end);
		str.setCharAt(end,str.charAt(p+1));
		str.setCharAt(p+1,temp);
		sort(str,start,p);
		sort(str,p+2,end);
		}
	}
		
}
